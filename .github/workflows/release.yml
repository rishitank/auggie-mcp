name: Release
on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag name (e.g., v0.1.0)'
        required: true
      draft:
        description: 'Create as a draft release'
        required: false
        default: 'false'
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub Release (gh)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG: ${{ github.event.inputs.tag || github.ref_name }}
          DRAFT: ${{ github.event.inputs.draft || 'false' }}
        run: |
          FLAGS=()
          if [ "${DRAFT}" = "true" ]; then FLAGS+=("--draft"); fi
          if [[ ! "${TAG}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+(-[A-Za-z0-9.-]+)?(\+[A-Za-z0-9.-]+)?$ ]]; then echo "Invalid tag format: ${TAG}. Expected semantic version format: v1.2.3, v1.2.3-alpha.1, or v1.2.3+build.1"; exit 1; fi
          gh release view "${TAG}" >/dev/null 2>&1 && { echo "Release ${TAG} already exists. Skipping creation."; exit 0; }
          gh release create "${TAG}" --title "${TAG}" --generate-notes "${FLAGS[@]}" || { echo "Failed to create release ${TAG}. Check if tag exists or permissions are missing."; exit 1; }
